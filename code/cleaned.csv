Anon Team ID,How many members in your Team?,Q1_tests,Q2_tests,Q3_tests,Q4_tests,Q5_tests,Q1_invalid,Q2_invalid,Q3_invalid,Q4_invalid,Q5_invalid
1,2,">>> least_positive_index([1, 2, 3])
0",">>> first_positive_integer(' sdf ten miles is about jyg km')
0",">>> min_freq([1, 2, 1])
2",">>> max_profit([1, 2, 3, 3, 8, 0, 2])
(0, 4)",">>> reorder([3, 2, 1, 4, 7, 0, 1, 5], 2)
[1, 2, 0, 1, 3, 4, 7, 5]",,,,,
2,2,">>> least_positive_index([0, -2, 3000000000000])
2
>>> least_positive_index([0])
-2
>>> least_positive_index([-1])
-2
>>> least_positive_index([-1, -1])
-3
>>> least_positive_index([-1, -1, -2])
-4",">>> first_positive_integer('0 miles is about 10 km')
10
>>> first_positive_integer('10 miles is about 10 km')
10
>>> first_positive_integer('-10 miles is about -10 km')
0
>>> first_positive_integer('-12 miles is about -10 km')
0
>>> first_positive_integer('-12 miles is about -12 km')
0
>>> first_positive_integer('-12 miles is about -12 1km')
1
>>> first_positive_integer('-1.2 miles is about -12.2 1km')
1
>>> first_positive_integer('-1.2 miles is about -12.2 1.9km')
1
>>> first_positive_integer('-1.2 miles is about -12.2 12.9km')
12",">>> min_freq([-1, 2, 2, 1])
-1
>>> min_freq([1, 2, 1])
2
>>> min_freq([1, -20, -3])
-20
>>> min_freq([0, -20, -3])
-20
>>> min_freq([-20, -20, -3, -3])
-20
>>> min_freq([-3, -3, -20, -20])
-20
>>> min_freq([3, 3, 20, 20])
3
>>> min_freq([-1])
-1",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([])
>>> max_profit([5])
(0, 0)
>>> max_profit([5, 4, 3, 2, 1])
(0, 0)
>>> max_profit([3, 3, 3, 3, 3])
(0, 1)
>>> max_profit([1, 2, 3, 4, 5])
(0, 4)
>>> max_profit([7, 1, 5, 3, 6, 4])
(1, 4)
>>> max_profit([3, 3, 5, 0, 0, 3, 1, 4])
(6, 7)
>>> max_profit([100, 50, 200, 30, 150, 300])
(3, 5)
>>> max_profit([1, -2, 0, -5, -1])
(0, 0)
>>> max_profit([5, 2, 10, 7, 1, 8])
(1, 2)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([], 5)
[]
>>> reorder([1, 2, 3, 4, 5], 10)
[1, 2, 3, 4, 5]
>>> reorder([10, 15, 20, 25], 5)
[10, 15, 20, 25]
>>> reorder([3, 2, 1, 4, 5, 6], 4)
[3, 2, 1, 4, 5, 6]
>>> reorder([2, 3, 1, 2, 4, 3, 5], 3)
[2, 3, 1, 2, 4, 3, 5]
>>> reorder([-3, -2, -1, 0, 1, 2], 0)
[-3, -2, -1, 0, 1, 2]
>>> reorder([1.5, 2.5, 3.5, 4.5], 3)
[1.5, 2.5, 3.5, 4.5]
>>> reorder([8, 6, 12, 15, 10, 7, 20, 18, 22], 15)
[8, 6, 12, 15, 10, 7, 20, 18, 22]
>>> reorder([5], 2)
[5]
>>> reorder([2, 3, 1, 4, 3, 5, 2], 3)
[2, 3, 1, 2, 3, 4, 5]",,,,,
3,2,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([100, 22, 33])
1
>>> least_positive_index([100, 22, 3])
2",">>> first_positive_integer('6miles is about 10km')
6
>>> first_positive_integer('100 cm is about 1m')
100
>>> first_positive_integer('-100 cm is about 1 m')
1
>>> first_positive_integer('All numbers here are negative: 1 ,-2 ,-3 .')
1",">>> min_freq([1, 2, 3])
1
>>> min_freq([1, 2, 2])
1
>>> min_freq([1, 1, 1])
1",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([1, 2, -3])
(0, 1)
>>> max_profit([-4, 2, 3])
(1, 2)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([3, 4, 1], 6)
[3, 4, 1]
>>> reorder([6, 3, 4, 1], 3)
[1, 3, 6, 4]",,,,,
4,2,">>> least_positive_index([0, 0, 0])
-4
>>> least_positive_index([-11, -11, -11, -9, -9])
-6
>>> least_positive_index([1, 2, 1, 3, 4, 1, 5])
5",">>> first_positive_integer('The temperature is 25 degrees Celsius')
25
>>> first_positive_integer('The price is $5.99')
0
>>> first_positive_integer('The room numbers are 101, 102, and 103')
101
>>> first_positive_integer('The profit is -$50')
0
>>> first_positive_integer('The code is ABC123')
0
>>> first_positive_integer('There are 3 apples in the basket')
3",">>> min_freq([1, 2, 1])
2
>>> min_freq([3, 5, 2, 5, 3, 4, 2])
4
>>> min_freq([1000, 500, 200, 1000, 200, 500, 1000])
200
>>> min_freq([7])
7
>>> min_freq([-2, -3, -2, -1, -3])
-1
>>> min_freq([0, 0, 1, 0, 1, 2, 0])
2
>>> min_freq([4, 4, 2, 3, 2, 3, 4, 3])
2",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([3, 2, 1])
(0, 0)
>>> max_profit([5])
(0, 0)
>>> max_profit([1, 7, 3, 6, 9, 5, 2])
(0, 4)
>>> max_profit([2, 4, 1, 6, 7, 3, 8])
(2, 6)
>>> max_profit([3, 3, 3, 3, 3])
(0, 1)
>>> max_profit([5, -2, 3, 8, 1, 10])
(4, 5)
>>> max_profit([])
>>> max_profit([1, 7, 3, 6, 9, 5, 2, 10, 8])
(0, 7)
>>> max_profit([8, 6, 2, 10, 7, 5, 1, 9])
(2, 3)",">>> reorder([3, 2, 2, 1], 2)
[1, 2, 2, 3]
>>> reorder([3.5, 2.2, 1.8, 2.5], 2.5)
[2.2, 1.8, 3.5, 2.5]
>>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([-3, 2, -1, 1], 2)
[-3, 2, -1, 1]
>>> reorder([3, 2, 1, 2, 2], 2)
[1, 2, 3, 2, 2]
>>> reorder([], 2)
[]
>>> reorder([3, 4, 5], 2)
[3, 4, 5]
>>> reorder([1, 0, -1], 2)
[1, 0, -1]
>>> reorder([3, 2, 1, 2, 3], 2)
[1, 2, 3, 2, 3]
>>> reorder([3, 2, 1, 3, 2, 1], 2)
[1, 2, 1, 3, 2, 3]",,,,,
5,2,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([5, 0, 1, 2, 3])
2
>>> least_positive_index([5, 0, -1, 2, 3, -4])
3
>>> least_positive_index([])
-1
>>> least_positive_index([-3, -4, -2])
-4",">>> first_positive_integer(' iles 5  about5 7')
5
>>> first_positive_integer(' iles -5 about-7')
0
>>> first_positive_integer('')
0",">>> min_freq([2, 1, 1, 2, 1, 2])
1",">>> max_profit([1, 2, 3])
(0, 2)",">>> reorder([3, 2, 1], 3)
[3, 2, 1]",,,,,
6,3,">>> least_positive_index([])
-1
>>> least_positive_index([0])
-2
>>> least_positive_index([0, 0, 0])
-4
>>> least_positive_index([1])
0
>>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([123456, 1234567, 12345])
2
>>> least_positive_index(list(range(10000, 0, -1)) )
9999",">>> first_positive_integer('42')
42
>>> first_positive_integer(' ')
0
>>> first_positive_integer('\\n')
0
>>> first_positive_integer('abc')
0
>>> first_positive_integer('%%%%%')
0
>>> first_positive_integer('All readings are below -20')
0
>>> first_positive_integer('All readings are below -20.0')
0
>>> first_positive_integer('All readings are below 20.0')
20
>>> first_positive_integer('All readings are below 20.06')
20
>>> first_positive_integer('All readings are below 20')
20
>>> first_positive_integer('All readings are below .6')
0
>>> first_positive_integer('007 is a secret agent number')
0
>>> first_positive_integer('0123 is a secret agent number')
0
>>> first_positive_integer('123 is a secret agent number')
123
>>> first_positive_integer('The population is 123456789')
123456789
>>> first_positive_integer('There were 3000 participants')
3000
>>> first_positive_integer('CR7')
0
>>> first_positive_integer('CR 7')
7
>>> first_positive_integer('CR-7')
0
>>> first_positive_integer('CR -7')
0
>>> first_positive_integer('The address is 123B Baker Street')
123
>>> first_positive_integer('Wow! 100 balloons')
100
>>> first_positive_integer('The temperatures are -3, 0, 15')
15
>>> first_positive_integer('The temperatures are -3  0  15')
15
>>> first_positive_integer('Amount owed is 1,234 dollars')
1
>>> first_positive_integer('No numbers here')
0
>>> first_positive_integer('Only zeros 0 and negatives -1')
0
>>> first_positive_integer('Pi is approximately 3.14159')
3
>>> first_positive_integer('hello2world')
0
>>> first_positive_integer('2e7')
2
>>> first_positive_integer('2helloworld')
2
>>> first_positive_integer('helloworld2')
0
>>> first_positive_integer('10^3')
10
>>> first_positive_integer('1+4')
1
>>> first_positive_integer('')
0
>>> first_positive_integer('0\\n14\\n5')
14",">>> min_freq([1, 2, 1, 2])
1
>>> min_freq([2, 2, 1, 1])
1
>>> min_freq([-2, -2, 1, 1])
-2
>>> min_freq([-1, -2, -2, -3, -3, -1])
-3",">>> max_profit([-1, 2, -3, 4])
(1, 3)
>>> max_profit([-1, -2, -3, 4])
(0, 0)
>>> max_profit([-1, -2, -3, 4, 2])
(0, 0)
>>> max_profit([1, -2, -3, 4, 5])
(0, 4)
>>> max_profit([5])
(0, 0)
>>> max_profit([])
>>> max_profit([5, 4, 3, 2, 1])
(0, 0)
>>> max_profit([5, 4, 3, 6, 1])
(2, 3)
>>> max_profit([3, 3, 3, 3, 3])
(0, 1)
>>> max_profit([0, 5, -2, 0, 3])
(0, 0)
>>> max_profit([0, -5, -2, 0, -3])
(0, 0)
>>> max_profit([-5, -2, -3])
(0, 0)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([1, 2, 3], 2)
[1, 2, 3]
>>> reorder([1, 2, 3], 0)
[1, 2, 3]
>>> reorder([1, 3, 2, 4, 7, 3, 6], 5)
[1, 3, 2, 4, 3, 7, 6]",,,,,
7,2,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([-4, -7, -2, 0])
-5
>>> least_positive_index([1, 2, 2, 5, -1])
0
>>> least_positive_index([1000, 500, 200, 100, 50, 20, 10, 5, 2, 1])
9
>>> least_positive_index([1000, 500, 200, 100, 50, 20, 10, 5, 2, -1])
8
>>> least_positive_index([-1000, 500, 200, 100, 50, 20, 10, 5, -2, -1])
7",">>> first_positive_integer('6 miles is about 10 km')
6
>>> first_positive_integer('The price is $25 and the discount is 15%')
15
>>> first_positive_integer('No positive integers in this string')
0
>>> first_positive_integer('The answer is 4 2')
4
>>> first_positive_integer('The answer is 42')
42
>>> first_positive_integer('The temperature is -5 degrees Celsius and rising to 10 degrees')
10
>>> first_positive_integer('The price is $2.5 per item')
0
>>> first_positive_integer('Twenty apples cost $10')
0
>>> first_positive_integer('Twenty apples cost 10$')
10",">>> min_freq([1, 2, 1])
2
>>> min_freq([3, 5, -1, 7])
-1
>>> min_freq([5, 3, 8, 2, 1, 2, 8, 3, 5])
1
>>> min_freq([-2, -5, -2, -8, -5, -2, -1])
-8",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([3, 2, 1])
(0, 0)
>>> max_profit([7, 1, 5, 3, 6, 4])
(1, 4)
>>> max_profit([2, 2, 2, 2, 2])
(0, 1)
>>> max_profit([])
>>> max_profit([5])
(0, 0)
>>> max_profit([7, -1, 5, -3, 6, 4])
(2, 4)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([2, 2, 2, 2, 2], 2)
[2, 2, 2, 2, 2]
>>> reorder([], 5)
[]
>>> reorder([1, 3, 0, -2, 4], 5)
[1, 3, 0, -2, 4]
>>> reorder([10, 20, 15, 25], 5)
[10, 20, 15, 25]
>>> reorder([8, 2, 10, 5, 12, 3], 7)
[2, 5, 3, 8, 10, 12]",,,,,
8,3,">>> least_positive_index([-1, 1, 2, 3])
1
>>> least_positive_index([1, 1, 2, 3])
1
>>> least_positive_index([1, 1, -1, 2, 3])
1
>>> least_positive_index([1, 1, -1, 2, 3, 0])
1
>>> least_positive_index([0])
-2
>>> least_positive_index([-1])
-2",">>> first_positive_integer('6milesisabout10km')
6
>>> first_positive_integer('-6milesisabout10km')
0
>>> first_positive_integer('-6 milesis about10km')
0
>>> first_positive_integer(' miles is about -10 km')
0
>>> first_positive_integer(' miles is about  km')
0
>>> first_positive_integer('5')
5",">>> min_freq([1, 1])
1
>>> min_freq([1, 1, 2, 2])
1
>>> min_freq([1, 1, 1, 2, 2, 2, -2])
-2
>>> min_freq([0])
0
>>> min_freq([0, 1])
0",">>> max_profit([])
>>> max_profit([5])
(0, 0)
>>> max_profit([5, 5, 5, 5])
(0, 1)
>>> max_profit([5, 2, 3, 4, 5, 1])
(1, 4)
>>> max_profit([5, 4, 8, 2, 6])
(1, 2)
>>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([5, 4, 3, 2, 1])
(0, 0)
>>> max_profit([7, 1, 5, 3, 6, 4])
(1, 4)
>>> max_profit([3, 3, 3, 3, 3])
(0, 1)
>>> max_profit([-1, -2, -3, -4, -5])
(0, 0)
>>> max_profit([2, -1, 4, -3, 5])
(0, 4)",">>> reorder([0], 2)
[0]
>>> reorder([1.5, 2.7, 3.2, 4.0], 2)
[1.5, 2.7, 3.2, 4.0]
>>> reorder([1, 2, 3, 2, 4], 2)
[1, 2, 3, 2, 4]
>>> reorder([-1, 2, 3, 4, 5], 2)
[-1, 2, 3, 4, 5]
>>> reorder([1, 2, 3, 4, 5], 2)
[1, 2, 3, 4, 5]",,,,,
9,2,">>> least_positive_index([9, 5, 2])
2
>>> least_positive_index([9, 1, 2])
1
>>> least_positive_index([9, 8, 2, 4 ,5])
2
>>> least_positive_index([2, 8, 3, 3 ,5])
0",">>> first_positive_integer('miles 6 is about 10 km')
6
>>> first_positive_integer('miles 06 is about 10 km')
10
>>> first_positive_integer('miles 0600 is about 10 km')
10
>>> first_positive_integer('miles 0 is about 10 km')
10
>>> first_positive_integer('1000')
1000
>>> first_positive_integer('1000years ago my 100')
1000",">>> min_freq([1, 2, 1, 4, 4, 2 , 2, 0])
0
>>> min_freq([1, 2, 1, 4, 4, 2 , 2, 0, -1, 8])
-1
>>> min_freq([1, 2, 1, 4, 4, 2 , 2, 0, 0, 9, 8])
8
>>> min_freq([1, 2, 1, 4, 4, 2 , 2, 0, 0, 3, 9, 8])
3
>>> min_freq([1, 2, 1, 4, 4, 2 , 2, 0, 0, 3, 9, 8, -3])
-3",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([4, 5, 5, 5])
(0, 1)
>>> max_profit([4, 4, 4, 4])
(0, 1)
>>> max_profit([4, 4, 7, 1])
(1, 2)
>>> max_profit([4, 4, -7, 1])
(0, 1)
>>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([0, 2, 3])
(1, 2)
>>> max_profit([0, 2, 3, 1, 9, 6, 10])
(3, 6)
>>> max_profit([4,3,3,2,1])
(1, 2)
>>> max_profit([4,3,2,1])
(0, 0)
>>> max_profit([4,6,7,4, 2])
(0, 2)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([0, 3, 4, 2, 1], 0)
[0, 3, 4, 2, 1]
>>> reorder([3, 3, 2, 1, 0], 2)
[1, 0, 2, 3, 3]
>>> reorder([3, 0, 2, -1, 3], 2)
[0, -1, 2, 3, 3]",">>> least_positive_index([2, 8, 2, 3 ,5])
0",,,,">>> reorder([5, 3, 4, 2, 1], 2)
[1, 2, 5, 3, 4]
>>> reorder([0, 3, 3, 2, 1], 2)
[0, 1, 2, 3, 3]
>>> reorder([0, 3, 3, 2, 1, 4], 2)
[0, 1, 2, 3, 3, 4]
>>> reorder([3, 3, -1, 1, 0], -1)
[-1, 3, 3, 1, 0]
>>> reorder([3, 0, 2, -1, 3], -1)
[-1, 3, 0, 2, 3]
>>> reorder([3, 0, 4, -1, 3], -1)
[-1, 3, 0, 4, 3]
>>> reorder([3, 0, 2, -1, 1, 4], 1)
[0, -1, 1, 3, 2, 4]"
10,1,">>> least_positive_index([])
-1
>>> least_positive_index([-2, -5, -7])
-4
>>> least_positive_index([0, 2, 4, 6])
1
>>> least_positive_index([-3, -1, 0, 2, 4])
3
>>> least_positive_index([2, 1, 4, 1, 3])
3
>>> least_positive_index([1, 2, 3])
0",">>> first_positive_integer(' ')
0
>>> first_positive_integer('The price is $5.99')
0
>>> first_positive_integer('There are 3 apples and 2 oranges')
3
>>> first_positive_integer('The room numbers are 101 and 203')
101
>>> first_positive_integer('16 miles is about 10 km')
16",">>> min_freq([1, 2, 2, 3, 3, 4, 4])
1
>>> min_freq([-1, -2, 1, -2, 1])
-1
>>> min_freq([1, 2, 2, 3, 3, 4, 4])
1
>>> min_freq([1, 2, 1])
2",">>> max_profit([])
>>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([1, 2, -1, 3])
(0, 3)
>>> max_profit([7, 1, 5, 3, 6, 4])
(1, 4)
>>> max_profit([1, 2, 3])
(0, 2)",">>> reorder([], 2)
[]
>>> reorder([3, 2, 2, 1], 2)
[1, 2, 2, 3]
>>> reorder([3, 4, 5], 2)
[3, 4, 5]
>>> reorder([3, 2, 1], 2)
[1, 2, 3]",,,,,
11,2,">>> least_positive_index([0, 2, 3])
1
>>> least_positive_index([1, 1, 3])
1
>>> least_positive_index([1, 1, 1, 3])
2",">>> first_positive_integer('12 miles is about 10 km')
12
>>> first_positive_integer('miles is about km')
0
>>> first_positive_integer('miles is about 07 56 km 23')
56
>>> first_positive_integer('miles is about - 7 506km 23')
7
>>> first_positive_integer('miles is about - 7.5 506km 23')
7",">>> min_freq([1, 2, 1, 2])
1
>>> min_freq([2, 1, 1, 2, 1, 2])
1
>>> min_freq([2, 1, 0, 1, 2, 1, 2])
0",">>> max_profit([3, 2, 1])
(0, 0)
>>> max_profit([3, 3, 2, 1])
(0, 1)
>>> max_profit([3, 3, 2, 2])
(0, 1)
>>> max_profit([2, 2, 3, 3])
(1, 2)",">>> reorder([1, 0, -6, 9, 10, 3], 2)
[1, 0, -6, 9, 10, 3]
>>> reorder([1, 11, -6, 9, 10, 3], 2)
[1, -6, 11, 9, 10, 3]",,,,,
12,5,">>> least_positive_index([-1, 2, 3])
1
>>> least_positive_index([-1, -2, -3])
-4
>>> least_positive_index([-1])
-2
>>> least_positive_index([0])
-2
>>> least_positive_index([3, 2, 1])
2
>>> least_positive_index([-1, 0])
-3",">>> first_positive_integer('-1 miles is about 10 km')
10
>>> first_positive_integer('0 miles is about 10 km')
10
>>> first_positive_integer('12miles is about 10 km')
12
>>> first_positive_integer('6Miles is about 10 km')
6
>>> first_positive_integer('Miles7 is about 10 km')
10
>>> first_positive_integer(' 17 les is -1 about 10 km')
17
>>> first_positive_integer(' miles is about  km')
0
>>> first_positive_integer('-1 mi6les is about 5 km')
5",">>> min_freq([2, 1, 1, 2])
1
>>> min_freq([2, 0, 1])
0
>>> min_freq([2, -2, 1])
-2
>>> min_freq([0])
0
>>> min_freq([-2, -2, -2, -1])
-1
>>> min_freq([-2, -1, -1, -1])
-2
>>> min_freq([-2, -2, -1, -1])
-2",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([1])
(0, 0)
>>> max_profit([1, 1, 1])
(0, 1)
>>> max_profit([-1, 1, 1])
(1, 2)
>>> max_profit([1, 1, 3])
(1, 2)
>>> max_profit([3, 3, 1])
(0, 1)
>>> max_profit([3, 2, 1])
(0, 0)
>>> max_profit([3, 7, 1, 4])
(0, 1)
>>> max_profit([3, 7, 1, 5])
(0, 1)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([3, 2, 1], 5)
[3, 2, 1]
>>> reorder([4, 2, 1, 3], 2)
[1, 2, 4, 3]
>>> reorder([4, 3, 5, 1, 2], 5)
[4, 3, 5, 1, 2]
>>> reorder([4, 3, 5, 1, 2, 7], 5)
[4, 3, 5, 1, 2, 7]
>>> reorder([4, 3, 5, 7, 1, 2], 5)
[4, 3, 5, 1, 2, 7]
>>> reorder([10, 5, 8, 3, 7, 1, 9, 4], 5)
[3, 5, 1, 4, 10, 8, 7, 9]",,,,,
13,2,">>> least_positive_index([1, 2, 1, 3])
2
>>> least_positive_index([1, 2, 0, 3])
0
>>> least_positive_index([1, 2, -1, 3])
0",">>> first_positive_integer('one+5 miles is about 10 km')
10
>>> first_positive_integer('o5sx miles is about 10 km')
10
>>> first_positive_integer('2.00 hiii iam 5 6 7')
2",">>> min_freq([1, 2, 2, 2, 1, 1])
1
>>> min_freq([3, 2, 2, 2, 3, 3])
2",">>> max_profit([-1, -2, 3])
(0, 0)
>>> max_profit([-1, 2, 3])
(1, 2)
>>> max_profit([1, 1, 2, 3])
(1, 3)
>>> max_profit([1, 1, 1, 1])
(0, 1)
>>> max_profit([1, 1, 5, 5])
(1, 2)",">>> reorder([2, 2, 2, 2], 2)
[2, 2, 2, 2]
>>> reorder([-3, -4, 5, -6], 5)
[-3, -4, 5, -6]
>>> reorder([-3, -4, 5, 7, -6], 5)
[-3, -4, 5, -6, 7]
>>> reorder([1, 2, 3, 0, -4, -6], -5)
[-6, 1, 2, 3, 0, -4]",,,,,
14,2,">>> least_positive_index([-1, 2, 3])
1",">>> first_positive_integer('6 miles is about 10 km')
6
>>> first_positive_integer('a miles is about as km')
0
>>> first_positive_integer(""abc 42 def 17 xyz"")
42
>>> first_positive_integer(""No positive integers here!"")
0",">>> min_freq([1, 2, 1])
2",">>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([])",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([-3, 2, 1], 2)
[-3, 2, 1]",">>> least_positive_index([3, -5, 1, 7, -2, 8, 0, -1])
1",,,,
15,2,">>> least_positive_index([1, 1])
1
>>> least_positive_index([3, 1, -1, 2, 0, -5, 4, -1, 3, 0])
1",">>> first_positive_integer('The numbers are 3, -5, and 7.')
3",">>> min_freq([3, 1, 2, 5, 2, 3, 1, 4, 4, 1])
5",">>> max_profit([1, 2, 3])
(0, 2)",">>> reorder([4, 2, 7, 1, 5, 3], 4)
[4, 2, 1, 3, 7, 5]",,,,,
16,4,">>> least_positive_index([1, -120, -3])
0
>>> least_positive_index([-1, 20, -3])
1
>>> least_positive_index([10, 20, 3])
2
>>> least_positive_index([10, 0, 3])
2",">>> first_positive_integer('1.9 miles is about 10  km')
1
>>> first_positive_integer('11 miles is about 10 km')
11
>>> first_positive_integer('0 miles is about 10 km')
10",">>> min_freq([2, 1, 1])
2
>>> min_freq([1, 1, 1])
1
>>> min_freq([2, 2, 11, 4, 3])
3
>>> min_freq([0, 0, 1, 1, 2, 2])
0",">>> max_profit([0, 2, 3, 4, 1])
(1, 3)
>>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([1, 2, 3, 4])
(0, 3)",">>> reorder([3, 4, 2, 1], 2)
[1, 3, 2, 4]
>>> reorder([3, 2, 1], 2)
[1, 2, 3]",,,,,
17,3,">>> least_positive_index([1, 2, -1, 3])
0
>>> least_positive_index([1, 2, -1, 3])
0
>>> least_positive_index([1, 2, 0, 3])
0",">>> first_positive_integer('6 miles is about 10 km')
6
>>> first_positive_integer('gsjkbg uesfgjhg 7 hsaekdgj 8786 aeidgf 2847 asidufg aiugf asuhf')
7
>>> first_positive_integer('#$^ sipgh w87r ??o tsueghb. 487 sdgh')
487
>>> first_positive_integer('#$^ sipgh w87r ??o tsueghb. -487 sdgh')
0",">>> min_freq([1, 2, 1, 2])
1
>>> min_freq([-3, -3, 2, 3, 7, 7, 3, 0, 2])
0
>>> min_freq([-3, 3, 2, 3, 2])
-3
>>> min_freq([1, 2, 3, 2, 3, 4, 4, 5, 1, 5, 0, 0, -1, -1])
-1",">>> max_profit([1, 2, 3, 1, 4, 3])
(3, 4)
>>> max_profit([1, 2, 3, 1, 4, 3,0])
(3, 4)
>>> max_profit([1, 2, 3, 1, 4, 3,-4])
(3, 4)
>>> max_profit([7, 1, 5, 3, 6, 4])
(1, 4)",# Not attempted,,,,,
18,2,">>> least_positive_index([10, 2, 30])
1
>>> least_positive_index([8, 2, 0])
1",# Not attempted,">>> min_freq([1, 2, 1, 2, 1, 2])
1",# Not attempted,">>> reorder([3, 2, 1], 2)
[1, 2, 3]",,,,,
19,2,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([7, 1, 3])
1
>>> least_positive_index([-1, -2, -7])
-4
>>> least_positive_index([])
-1",">>> first_positive_integer('-2 miles is about 10 km')
10
>>> first_positive_integer('-1+3 miles is about 10 km')
10
>>> first_positive_integer('six miles is about 10 km')
10
>>> first_positive_integer('six miles is about ten km')
0
>>> first_positive_integer('This is a string with 123 words and four five six')
123
>>> first_positive_integer('No positive integers here')
0",">>> min_freq([2, 1, 2, 1])
1
>>> min_freq([2, 1, 2, 1, 5])
5",">>> max_profit([2, 1, 4, 5])
(1, 3)
>>> max_profit([2, 10, 4, 1, 9])
(0, 1)
>>> max_profit([7, 6, 4, 3, 1, 5, 8, 2, 7])
(4, 6)",">>> reorder([3, 2, 1, 0, 1], 2)
[1, 2, 0, 1, 3]
>>> reorder([3, 2, 1, 0, 1], 1)
[0, 3, 1, 2, 1]
>>> reorder([3, 2, 1, 0, 1], 3)
[3, 2, 1, 0, 1]
>>> reorder([3, 2, -1], 2)
[-1, 2, 3]
>>> reorder([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5], 5)
[3, 1, 4, 1, 5, 2, 3, 9, 5, 6, 5]",,,,,
20,3,">>> least_positive_index([-1, 2, 3])
1
>>> least_positive_index([0, 2, 3])
1
>>> least_positive_index([0, 2, 2, 3])
2
>>> least_positive_index([3, 2, 1])
2
>>> least_positive_index([0])
-2
>>> least_positive_index([0, 0])
-3
>>> least_positive_index([-1, 0, 0])
-4",">>> first_positive_integer('-6 miles is about 10 km')
10
>>> first_positive_integer('0 miles is about 10.4 km 9.9 ')
10
>>> first_positive_integer('10 miles is about 10.4 km 9.9 ')
10
>>> first_positive_integer('1011$,12 miles is about 11 km 9 ')
1011
>>> first_positive_integer('1011%,12 miles is about 11 km 9 ')
1011
>>> first_positive_integer('2:30 pm ,12 miles is about 11 km 9 ')
2",">>> min_freq([2, 2, 2])
2
>>> min_freq([2, 1])
1
>>> min_freq([-1, 1, 1])
-1
>>> min_freq([-1, -1, 1])
1
>>> min_freq([-1, -1, 1, 0])
0
>>> min_freq([-1, -1, -7, -9])
-9",">>> max_profit([0, 0, 8])
(0, 0)
>>> max_profit([-1, 0, 8])
(0, 0)
>>> max_profit([-1, 0, 8, 3])
(0, 0)
>>> max_profit([7, 0, 5, 3, 6, 0])
(3, 4)",">>> reorder([3, 9, 1, 7, 8], 2)
[1, 3, 9, 7, 8]
>>> reorder([3, 9, 1, 6, 8], 7)
[3, 1, 6, 9, 8]
>>> reorder([3, 9, 1, 7, 8], 7.8)
[3, 1, 7, 9, 8]
>>> reorder([3, -9, 1, 7, 8], -7.8)
[-9, 3, 1, 7, 8]
>>> reorder([3, -9, 1, 7, 8], 0)
[-9, 3, 1, 7, 8]
>>> reorder([3, -1, 4, 1.5, 5, -9, 2.6, 5.3, 0], 4)
[3, -1, 4, 1.5, -9, 2.6, 0, 5, 5.3]",,,,,
21,4,">>> least_positive_index([0, 1, 2, 3])
1
>>> least_positive_index([-1, 1, 2, 3])
1
>>> least_positive_index([1, 1, 2, 3, 1])
4",">>> first_positive_integer('2.6 miles is about 10 km')
2
>>> first_positive_integer('-2.6 miles is about 10 km')
10",">>> min_freq([1, 2, 1, 2])
1
>>> min_freq([1, 2, 1, 2, -2])
-2
>>> min_freq([1, 2, 1, 2, -2, -2])
-2
>>> min_freq([1, 2, 1, 2, -2, -2, -1, -1])
-2",">>> max_profit([5, 2, 2, 3])
(2, 3)
>>> max_profit([5, 2, 7, 3, 12])
(1, 4)
>>> max_profit([0, 7, 3, 12])
(2, 3)",">>> reorder([-3, 2, 1], 2)
[-3, 2, 1]
>>> reorder([-69, -3, 1, 2], 12)
[-69, -3, 1, 2]",,,,,">>> reorder([2, 3, 1], 2)
[1, 2, 3]
>>> reorder([2, -3, 1], 2)
[-3, 1, 2]
>>> reorder([-3, 1, 2, 10, 12, -69, -63], -12)
[-3, 1, 2, 10, 12, -69, -63]
>>> reorder([12, -69, -63, -3, 1, 2, 10], 12)
[-69, -63, -3, 1, 2, 10, 12]"
22,3,">>> least_positive_index([1, 1, 2, 3, 1])
4",">>> first_positive_integer('6miles is about 10 km')
6",">>> min_freq([1, 2, 2, 1])
1",">>> max_profit([1, 2, 3])
(0, 2)",# Not attempted,,,,,
23,2,">>> least_positive_index([-1, -1, -1])
-4
>>> least_positive_index([4, -7, 2, 0, 5, 1])
5
>>> least_positive_index([2, 4, 5, 6])
0",">>> first_positive_integer('6 miles is about 12 km')
6
>>> first_positive_integer(' miles is about 12 km')
12
>>> first_positive_integer(' miles 17 is about 12 km')
17
>>> first_positive_integer(' miles 17 is 22 about 12 km')
17",">>> min_freq([1, 2, 2])
1
>>> min_freq([1, 2, 1])
2
>>> min_freq([1, 2, 1, 3, 3, 3])
2",">>> max_profit([10, 11, 9])
(0, 1)
>>> max_profit([10, 1, 9])
(1, 2)
>>> max_profit([7, 1, 9])
(1, 2)",">>> reorder([3, 2, 9], 2)
[3, 2, 9]
>>> reorder([3, 1, 9], 1)
[3, 1, 9]
>>> reorder([9, 1, 9], 1)
[9, 1, 9]
>>> reorder([3, 10, 9], 1)
[3, 10, 9]",,,,,
24,2,">>> least_positive_index([0, 1, 2, 3])
1
>>> least_positive_index([1, -2, 3])
0
>>> least_positive_index([])
-1",">>> first_positive_integer('abc,')
0
>>> first_positive_integer('abca3')
0
>>> first_positive_integer('abca 3 bdd')
3",">>> min_freq([1])
1
>>> min_freq([1, 2, 1, -3, 5, 0])
-3
>>> min_freq([1, 0])
0",">>> max_profit([-4, -9, 25])
(0, 0)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]",,,,,
25,6,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([1, 1, 2, 1, 3, 1])
5
>>> least_positive_index([0])
-2
>>> least_positive_index([1, 1, 1])
2
>>> least_positive_index([-1, -2, -3, -4, -9])
-6
>>> least_positive_index([-1, -2, -3, -4])
-5",">>> first_positive_integer('6 miles is about 10 km')
6
>>> first_positive_integer('I have -1 apple')
0
>>> first_positive_integer('I have -1 apple and -2 banana')
0
>>> first_positive_integer('I have -1 apple and 0 banana')
0
>>> first_positive_integer('I have -0 apple and 0 banana')
0
>>> first_positive_integer('I have apple')
0
>>> first_positive_integer('000')
0
>>> first_positive_integer('123 231')
123
>>> first_positive_integer('123 12232343hi')
123",">>> min_freq([1, 2, 3])
1",">>> max_profit([3, 2, 1])
(0, 0)
>>> max_profit([0])
(0, 0)
>>> max_profit([1, 2, 3])
(0, 2)
>>> max_profit([3, 3, 6])
(1, 2)
>>> max_profit([1, 2, 3])
(0, 2)",">>> reorder([3, 2, 1], 2)
[1, 2, 3]
>>> reorder([0, 1, 2, 0, 0, 0], 2)
[0, 1, 2, 0, 0, 0]
>>> reorder([2, 1, 0, 4], 2)
[2, 1, 0, 4]
>>> reorder([2, 4, 0, 1], 2)
[2, 0, 1, 4]
>>> reorder([4, 0, 1], 2)
[0, 1, 4]
>>> reorder([1, 3, 4, 2, 0, 0, 0], 2)
[1, 0, 0, 2, 0, 3, 4]",,,,,
26,2,">>> least_positive_index([1, 2, 3])
0
>>> least_positive_index([1, 2, 0])
0
>>> least_positive_index([-1, 2, 3])
1
>>> least_positive_index([1, 1, 1])
2
>>> least_positive_index([1, 1, 2])
1
>>> least_positive_index([-1, -1, -1])
-4
>>> least_positive_index([-1, 0, -2])
-4",">>> first_positive_integer('6 miles is about 10 km')
6
>>> first_positive_integer('6miles is about 10 km')
6
>>> first_positive_integer('0.6miles is about 10 km')
10
>>> first_positive_integer('0 miles is about 10 km')
10
>>> first_positive_integer('-12 miles is about 10 km')
10
>>> first_positive_integer(' miles is about  km')
0
>>> first_positive_integer(' -1 miles is about  km')
0
>>> first_positive_integer(' 1/2 miles is about  km')
1
>>> first_positive_integer('1.6 miles is about   km')
1
>>> first_positive_integer('-1.6 miles is about   km')
0",">>> min_freq([1, 2, 1])
2
>>> min_freq([1, 1, 1])
1
>>> min_freq([0, 0, 1, 1])
0
>>> min_freq([1, 1, 0, 0])
0",">>> max_profit([1, 2, 1])
(0, 1)
>>> max_profit([1, 1, 1])
(0, 1)
>>> max_profit([-11, 1, 1])
(1, 2)
>>> max_profit([0, 1, 1])
(1, 2)
>>> max_profit([0, 0, 1])
(0, 0)",">>> reorder([2, 1, 3, 4], 3)
[2, 1, 3, 4]
>>> reorder([2, 3, 3, 4], 3)
[2, 3, 3, 4]
>>> reorder([4, 3, 3, 3], 2)
[4, 3, 3, 3]",,,,,
Solution,1,">>> least_positive_index([])
-1
>>> least_positive_index([-1, -1])
-3
>>> least_positive_index([2, 1, 2, 1])
3
>>> least_positive_index([1, 2, 1, 2])
2",">>> first_positive_integer('')
0
>>> first_positive_integer('-7')
0
>>> first_positive_integer('.7')
0
>>> first_positive_integer('07')
0
>>> first_positive_integer('1481.9 2')
1481",">>> min_freq([-76])
-76
>>> min_freq([-1, -1])
-1
>>> min_freq([2, 1, 2, 1])
1
>>> min_freq([1, 2, 1, 2])
1",">>> max_profit([])
>>> max_profit([2, 1])
(0, 0)
>>> max_profit([1, 1])
(0, 1)
>>> max_profit([-3, -1])
(0, 0)
>>> max_profit([1, 2, 1, 2])
(0, 1)
>>> max_profit([1, 2, 1, 3, 2, 3])
(2, 3)",">>> reorder([], -1)
[]
>>> reorder([-1, -1], -1.0)
[-1, -1]
>>> reorder([-1, -1], float('nan'))
[-1, -1]
>>> reorder([5, 3.0, 2, 4, 1, 3], 3)
[2, 3.0, 1, 5, 4, 3]
>>> reorder([5, float('inf'), 1, 4, 2, float('inf')], float('inf'))
[5, inf, 1, 4, 2, inf]
>>> reorder([5, float('-inf'), 1, 4, 2, float('-inf')], float('-inf'))
[5, -inf, 1, 4, 2, -inf]",,,,,
